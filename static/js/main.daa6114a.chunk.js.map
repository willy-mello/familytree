{"version":3,"sources":["img/space.png","components/GenePoolandHuman.js","components/FamilyNode.js","components/ChildPlanet.js","components/Tree.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","chalk","require","Human","name","gender","birthPool","arguments","length","undefined","Object","classCallCheck","this","spawningPool","mate","GenePool","newSpawn","console","log","blue","getSpawn","x","y","spawn","child","push","red","Ymir","Audumbla","Laufey","procreate","Farbauti","Angrboda","Loki","ChildPlanet","props","kid","colors","gr","cp","idx","positions","z","react_default","a","createElement","dist","class","geometry","primitive","radius","material","color","opacity","position","animation","property","dur","repeat","to","loop","rotation","text","value","events","click","onClick","map","elem","Math","sqrt","pow","Tree","_React$createElement","_useState","useState","_useState2","slicedToArray","pool","setPool","easing","components_ChildPlanet","light","type","cursor","fuse","shader","radiusInner","radiusOuter","event-set__1","_event","scale","defineProperty","src","App","components_Tree","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.daa6114a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space.588e59c3.png\";","import React from \"react\";\nimport \"aframe\";\nimport { Entity, Scene } from \"aframe-react\";\nimport \"aframe-particle-system-component\";\nconst chalk = require(\"chalk\");\n\nclass Human {\n  constructor(name, gender, birthPool = null) {\n    this.name = name;\n    this.gender = gender;\n    this.birthPool = birthPool;\n    //will have to change spawning pool eventually to allow for\n    this.spawningPool = null;\n  }\n  //may need static functions\n  procreate(mate, name, gender) {\n    if (this.spawningPool === null) {\n      if (this.gender === \"male\") {\n        this.spawningPool = new GenePool(mate, this);\n        if (mate !== null) {\n          mate.spawningPool = this.spawningPool;\n        }\n      } else {\n        this.spawningPool = new GenePool(this, mate);\n        if (mate !== null) {\n          mate.spawningPool = this.spawningPool;\n        }\n      }\n      return this.spawningPool.newSpawn(name, gender);\n    } else {\n      return this.spawningPool.newSpawn(name, gender);\n    }\n  }\n  getSiblings() {\n    if (this.birthPool === null) {\n      console.log(\"this human sprang out of the ground\");\n      return;\n    }\n    console.log(chalk.blue(\"siblings\"), this.birthPool.getSpawn());\n    return this.birthPool.getSpawn();\n  }\n}\n\nclass GenePool {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.spawn = [];\n    // might need to bind this\n    // this.newSpawn = this.newSpawn.bind(this);\n  }\n  newSpawn(name, gender) {\n    const child = new Human(name, gender, this);\n    this.spawn.push(child);\n    console.log(chalk.red(\"spawn created\"), child);\n    return child;\n  }\n  getSpawn() {\n    console.log(\"current spawn\", this.spawn);\n    return this.spawn;\n  }\n  getX() {\n    console.log(\"this.x\", this.x);\n    return this.x;\n  }\n  getY() {\n    console.log(\"this.y\", this.y);\n    return this.y;\n  }\n}\nexport { Human, GenePool };\n","import React from \"react\";\nimport { Human, GenePool } from \"./GenePoolandHuman\";\n\nconst Ymir = new Human(\"Ymir\", \"male\");\nconst Audumbla = new Human(\"Audumbla\", \"female\");\nconst Ran = Ymir.procreate(Audumbla, \"Ran\", \"female\");\nconst Buri = Ymir.procreate(Audumbla, \"Buri\", \"male\");\nconst Aegir = Ymir.procreate(Audumbla, \"Aegir\", \"male\");\nconst Laufey = Ymir.procreate(Audumbla, \"Laufey\", \"female\");\nconst Farbauti = Ymir.procreate(Audumbla, \"Farbauti\", \"male\");\nconst Angrboda = Ymir.procreate(Audumbla, \"Angrboda\", \"female\");\nconst Loki = Farbauti.procreate(Laufey, \"Loki\", \"male\");\nconst Hel = Loki.procreate(Angrboda, \"Hel\", \"female\");\nconst Jormungandr = Loki.procreate(Angrboda, \"Jormungandr\", \"male\");\nconst Fenrir = Loki.procreate(Angrboda, \"Fenrir\", \"male\");\n\nexport default Loki;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"aframe\";\nimport { Entity, Scene } from \"aframe-react\";\nimport \"aframe-particle-system-component\";\n\nfunction ChildPlanet(props) {\n  const kid = props.kid;\n  console.log(kid, \"kid\");\n  const colors = kid.gender === \"male\" ? \"blue\" : \"pink\";\n  const gr = props.gr;\n  const cp = props.cp;\n  const idx = props.idx;\n  const positions = [\n    { x: 0, y: 0, z: -gr },\n    { x: 0, y: 0, z: gr },\n    { x: 0, y: gr, z: 0 },\n    { x: 0, y: -gr, z: 0 },\n    { x: 0, y: cp, z: cp },\n    { x: 0, y: cp, z: -cp },\n    { x: 0, y: -cp, z: cp },\n    { x: 0, y: -cp, z: -cp }\n  ];\n  return (\n    <Entity\n      class=\"clickable\"\n      geometry={{ primitive: \"sphere\", radius: gr / 8 }}\n      material={{ color: colors, opacity: 1 }}\n      position={positions[idx]}\n      animation={{\n        property: \"rotation\",\n        dur: 12000,\n        repeat: \"indefinite\",\n        to: \"0 360 0\",\n        // easing: \"linear\",\n        loop: true\n      }}\n      rotation={{ x: 0, y: 0, z: 0 }}\n      text={{ value: kid.name }}\n      events={{\n        click: props.onClick\n      }}\n    >\n      {kid.spawningPool !== null\n        ? kid.spawningPool.spawn.map((elem, idx) => {\n            return (\n              <ChildPlanet\n                onClick={() => console.log(\"cliecked on child of child\")}\n                kid={elem}\n                gr={gr / 4}\n                cp={Math.sqrt(Math.pow(gr, 2) / 2)}\n                idx={idx}\n              />\n            );\n          })\n        : null}\n      <Entity text={{ value: kid.name }} />\n    </Entity>\n  );\n}\n\nexport default ChildPlanet;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"aframe\";\nimport { Entity, Scene } from \"aframe-react\";\nimport \"aframe-particle-system-component\";\nimport ChildPlanet from \"./ChildPlanet\";\n\nimport Loki from \"./FamilyNode\";\n\nfunction Tree() {\n  const [pool, setPool] = useState(Loki.spawningPool);\n  console.log(pool, \"pool in Tree\");\n\n  const gr = 2;\n  const cp = Math.sqrt(Math.pow(gr, 2) / 2);\n  const tr = 0.01;\n  const _handleClickY = () => {\n    if (pool.y.birthPool !== null) {\n      setPool(pool.y.birthPool);\n    }\n  };\n  const _handleChildClick = child => {\n    console.log(\"clicked childclick\");\n    if (child.spawningPool !== null) {\n      setPool(child.spawningPool);\n    }\n  };\n  return (\n    <Scene\n    // environment={{\n    //   preset: \"starry\",\n    //   seed: 2,\n    //   lightPosition: { x: 0.0, y: 0.03, z: -0.5 },\n    //   fog: 0,\n    //   ground: \"canyon\",\n    //   groundYScale: 6.31,\n    //   groundTexture: \"walkernoise\",\n    //   groundColor: \"#8a7f8a\",\n    //   grid: \"none\"\n    // }}\n    >\n      <Entity\n        geometry={{ primitive: \"sphere\", radius: gr }}\n        material={{ color: \"lightblue\", opacity: 0 }}\n        position={{ x: 0, y: 0, z: -gr }}\n        animation={{\n          property: \"rotation\",\n          to: \"360 0 0\",\n          loop: true,\n          dur: 10000,\n          easing: \"linear\"\n        }}\n        rotation={{ x: 0, y: 0, z: 0 }}\n      >\n        {pool.spawn.length > 0\n          ? pool.spawn.map((elem, idx) => {\n              return (\n                <ChildPlanet\n                  onClick={() => _handleChildClick(elem)}\n                  kid={elem}\n                  gr={gr}\n                  cp={cp}\n                  idx={idx}\n                />\n              );\n            })\n          : null}\n        //green block\n        {/* <Entity\n          geometry={{ primitive: \"sphere\", radius: gr / 8 }}\n          material={{ color: \"green\", opacity: 1 }}\n          // position={{ x: cp, y: cp, z: -gr }}\n          position={{ x: 0, y: 0, z: -gr }}\n          animation={{\n            property: \"rotation\",\n            dur: 12000,\n            repeat: \"indefinite\",\n            to: \"0 360 0\",\n            // easing: \"linear\",\n            loop: true\n          }}\n          rotation={{ x: 0, y: 0, z: 0 }}\n        />\n        //red block\n        <Entity\n          geometry={{ primitive: \"sphere\", radius: gr / 8 }}\n          material={{ color: \"red\", opacity: 1 }}\n          \n          position={{ x: 0, y: 0, z: gr }}\n          animation={{\n            property: \"rotation\",\n            dur: 12000,\n            repeat: \"indefinite\",\n            to: \"360 360 360\",\n            \n            loop: true\n          }}\n          rotation={{ x: 0, y: 0, z: 0 }}\n        />\n        //yellow block\n        <Entity\n          geometry={{ primitive: \"sphere\", radius: gr / 8 }}\n          material={{ color: \"yellow\", opacity: 1 }}\n          \n          position={{ x: 0, y: cp, z: cp }}\n          animation={{\n            property: \"rotation\",\n            dur: 12000,\n            repeat: \"indefinite\",\n            to: \"360 0 0\",\n           \n            loop: true\n          }}\n          rotation={{ x: 0, y: 0, z: 0 }}\n        /> */}\n      </Entity>\n      <Entity\n        //transparent circle for parent rotation\n        geometry={{ primitive: \"sphere\", radius: 0 }}\n        material={{ color: \"lightblue\", opacity: 0 }}\n        position={{ x: 0, y: 0, z: -gr }}\n        animation={{\n          property: \"rotation\",\n          to: \"0 360 0\",\n          loop: true,\n          dur: 10000,\n          easing: \"linear\"\n        }}\n        rotation={{ x: 0, y: 0, z: 0 }}\n      >\n        <Entity\n          //dad circle\n          class=\"clickable\"\n          geometry={{ primitive: \"sphere\", radius: gr / 4 }}\n          material={{ color: \"blue\", opacity: 1 }}\n          position={{ x: 0.1 + gr / 4, y: 0, z: 0 }}\n          animation={{\n            property: \"rotation\",\n            dur: 12000,\n            repeat: \"indefinite\",\n            to: \"0 360 0\",\n            easing: \"linear\",\n            loop: true\n          }}\n          rotation={{ x: 0, y: 0, z: 0 }}\n          events={{\n            click: _handleClickY\n          }}\n        />\n        <Entity\n          //mom cicle\n          geometry={{ primitive: \"sphere\", radius: gr / 4 }}\n          material={{ color: \"hotpink\", opacity: 1 }}\n          position={{ x: -(0.1 + gr / 4), y: 0, z: 0 }}\n        />\n      </Entity>\n      {/* <Entity\n        geometry={{ primitive: \"torus\", radius: tr + gr, radiusTubular: tr }}\n        material={{ color: \"red\", opacity: 1 }}\n        position={{ x: 0, y: 0, z: -gr }}\n      /> */}\n      // look controls\n      {/* <Entity primitive=\"a-camera\" look-controls>\n        <Entity\n          primitive=\"a-cursor\"\n          cursor={{ fuse: false }}\n          material={{ color: \"white\", shader: \"flat\", opacity: 0.75 }}\n          geometry={{ radiusInner: 0.005, radiusOuter: 0.007 }}\n        />\n      </Entity> */}\n      <Entity light={{ type: \"point\" }} />\n      {/* <Entity gltf-model={{ src: \"virtualcity.gltf\" }} /> */}\n      <Entity\n        text={{ value: \"children of \" + pool.x.name + \" and \" + pool.y.name }}\n      />\n      <Entity\n        primitive=\"a-camera\"\n        // look-controls\n        position={{ x: -1, y: 1, z: 2 }}\n      >\n        <Entity\n          primitive=\"a-cursor\"\n          cursor={{ fuse: false }}\n          material={{ color: \"white\", shader: \"flat\", opacity: 0.75 }}\n          geometry={{ radiusInner: 0.005, radiusOuter: 0.007 }}\n          event-set__1={{\n            _event: \"mouseenter\",\n            scale: { x: 1.4, y: 1.4, z: 1.4 }\n          }}\n          event-set__1={{\n            _event: \"mouseleave\",\n            scale: { x: 1, y: 1, z: 1 }\n          }}\n          raycaster=\"objects: .clickable\"\n        />\n      </Entity>\n      <a-sky src={require(\"../img/space.png\")} />\n    </Scene>\n  );\n}\n\nexport default Tree;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"aframe\";\nimport { Entity, Scene } from \"aframe-react\";\nimport \"aframe-particle-system-component\";\nimport \"./App.css\";\nimport Loki from \"./components/FamilyNode\";\nimport Tree from \"./components/Tree\";\n\nfunction App() {\n  console.log(\"loki\", Loki.spawningPool.getSpawn());\n  const gr = 2;\n  const cp = Math.sqrt(Math.pow(gr, 2) / 2);\n  const tr = 0.01;\n  return (\n    <Tree />\n    // <Scene\n    // // environment={{\n    // //   preset: \"starry\",\n    // //   seed: 2,\n    // //   lightPosition: { x: 0.0, y: 0.03, z: -0.5 },\n    // //   fog: 0,\n    // //   ground: \"canyon\",\n    // //   groundYScale: 6.31,\n    // //   groundTexture: \"walkernoise\",\n    // //   groundColor: \"#8a7f8a\",\n    // //   grid: \"none\"\n    // // }}\n    // >\n    //   <Entity\n    //     geometry={{ primitive: \"sphere\", radius: gr }}\n    //     material={{ color: \"lightblue\", opacity: 0 }}\n    //     position={{ x: 0, y: 0, z: -gr }}\n    //     animation={{\n    //       property: \"rotation\",\n    //       to: \"360 0 0\",\n    //       loop: true,\n    //       dur: 5000,\n    //       easing: \"linear\"\n    //     }}\n    //     rotation={{ x: 0, y: 0, z: 0 }}\n    //   >\n    //     //green block\n    //     <Entity\n    //       geometry={{ primitive: \"sphere\", radius: gr / 8 }}\n    //       material={{ color: \"green\", opacity: 1 }}\n    //       // position={{ x: cp, y: cp, z: -gr }}\n    //       position={{ x: 0, y: 0, z: -gr }}\n    //       animation={{\n    //         property: \"rotation\",\n    //         dur: 12000,\n    //         repeat: \"indefinite\",\n    //         to: \"0 360 0\",\n    //         // easing: \"linear\",\n    //         loop: true\n    //       }}\n    //       rotation={{ x: 0, y: 0, z: 0 }}\n    //     />\n    //     //red block\n    //     <Entity\n    //       geometry={{ primitive: \"sphere\", radius: gr / 8 }}\n    //       material={{ color: \"red\", opacity: 1 }}\n    //       // position={{ x: cp, y: cp, z: -gr }}\n    //       position={{ x: 0, y: 0, z: gr }}\n    //       animation={{\n    //         property: \"rotation\",\n    //         dur: 12000,\n    //         repeat: \"indefinite\",\n    //         to: \"360 360 360\",\n    //         // easing: \"linear\",\n    //         loop: true\n    //       }}\n    //       rotation={{ x: 0, y: 0, z: 0 }}\n    //     />\n    //     //yellow block\n    //     <Entity\n    //       geometry={{ primitive: \"sphere\", radius: gr / 8 }}\n    //       material={{ color: \"yellow\", opacity: 1 }}\n    //       // position={{ x: cp, y: cp, z: -gr }}\n    //       position={{ x: 0, y: cp, z: cp }}\n    //       animation={{\n    //         property: \"rotation\",\n    //         dur: 12000,\n    //         repeat: \"indefinite\",\n    //         to: \"360 0 0\",\n    //         // easing: \"linear\",\n    //         loop: true\n    //       }}\n    //       rotation={{ x: 0, y: 0, z: 0 }}\n    //     />\n    //   </Entity>\n    //   <Entity\n    //     //transparent circle for parent rotation\n    //     geometry={{ primitive: \"sphere\", radius: 0 }}\n    //     material={{ color: \"lightblue\", opacity: 0 }}\n    //     position={{ x: 0, y: 0, z: -gr }}\n    //     animation={{\n    //       property: \"rotation\",\n    //       to: \"0 360 0\",\n    //       loop: true,\n    //       dur: 10000,\n    //       easing: \"linear\"\n    //     }}\n    //     rotation={{ x: 0, y: 0, z: 0 }}\n    //   >\n    //     <Entity\n    //       //dad circle\n    //       geometry={{ primitive: \"sphere\", radius: gr / 4 }}\n    //       material={{ color: \"blue\", opacity: 1 }}\n    //       position={{ x: 0.1 + gr / 4, y: 0, z: 0 }}\n    //       animation={{\n    //         property: \"rotation\",\n    //         dur: 12000,\n    //         repeat: \"indefinite\",\n    //         to: \"0 360 0\",\n    //         easing: \"linear\",\n    //         loop: true\n    //       }}\n    //       rotation={{ x: 0, y: 0, z: 0 }}\n    //     />\n    //     <Entity\n    //       //mom cicle\n    //       geometry={{ primitive: \"sphere\", radius: gr / 4 }}\n    //       material={{ color: \"hotpink\", opacity: 1 }}\n    //       position={{ x: -(0.1 + gr / 4), y: 0, z: 0 }}\n    //     />\n    //   </Entity>\n    //   {/* <Entity\n    //     geometry={{ primitive: \"torus\", radius: tr + gr, radiusTubular: tr }}\n    //     material={{ color: \"red\", opacity: 1 }}\n    //     position={{ x: 0, y: 0, z: -gr }}\n    //   /> */}\n    //   // look controls\n    //   {/* <Entity primitive=\"a-camera\" look-controls>\n    //     <Entity\n    //       primitive=\"a-cursor\"\n    //       cursor={{ fuse: false }}\n    //       material={{ color: \"white\", shader: \"flat\", opacity: 0.75 }}\n    //       geometry={{ radiusInner: 0.005, radiusOuter: 0.007 }}\n    //     />\n    //   </Entity> */}\n    //   <Entity light={{ type: \"point\" }} />\n    //   {/* <Entity gltf-model={{ src: \"virtualcity.gltf\" }} /> */}\n    //   <Entity text={{ value: \"YEEEEHAWWWWWW\" }} />\n    //   <a-sky src={require(\"./img/space.png\")} />\n    // </Scene>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}